{"ast":null,"code":"var _jsxFileName = \"/Users/sandy/Desktop/Portfolio/react-frontend-dev-portfolio/src/providers/ThemeProvider.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useMemo } from \"react\";\nimport { ThemeContext } from \"../contexts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [darkTheme, setDarkTheme] = useState(false);\n  const toggleTheme = () => {\n    setDarkTheme(curr => !curr);\n  };\n  const currentTheme = useMemo(() => localStorage.getItem(\"theme\"), []);\n  useEffect(() => {\n    if (!currentTheme) {\n      if (window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n        setDarkTheme(true);\n      }\n    } else {\n      setDarkTheme(currentTheme === \"dark\");\n    }\n  }, [currentTheme]);\n  useEffect(() => {\n    localStorage.setItem(\"theme\", darkTheme ? \"dark\" : \"light\");\n    document.body.className = darkTheme ? \"dark\" : \"light\";\n  }, [darkTheme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      darkTheme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"E/FVlbR8ujEkQ17FFOw/+XB1/yA=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["useState","useEffect","useMemo","ThemeContext","jsxDEV","_jsxDEV","ThemeProvider","children","_s","darkTheme","setDarkTheme","toggleTheme","curr","currentTheme","localStorage","getItem","window","matchMedia","matches","setItem","document","body","className","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sandy/Desktop/Portfolio/react-frontend-dev-portfolio/src/providers/ThemeProvider.tsx"],"sourcesContent":["import { useState, useEffect, useMemo } from \"react\";\nimport { ThemeContext } from \"../contexts\";\n\nexport const ThemeProvider = ({ children }: { children: React.ReactNode }) => {\n  const [darkTheme, setDarkTheme] = useState<boolean>(false);\n\n  const toggleTheme = () => {\n    setDarkTheme((curr) => !curr);\n  };\n\n  const currentTheme = useMemo(() => localStorage.getItem(\"theme\"), []);\n\n  useEffect(() => {\n    if (!currentTheme) {\n      if (\n        window.matchMedia &&\n        window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ) {\n        setDarkTheme(true);\n      }\n    } else {\n      setDarkTheme(currentTheme === \"dark\");\n    }\n  }, [currentTheme]);\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", darkTheme ? \"dark\" : \"light\");\n    document.body.className = darkTheme ? \"dark\" : \"light\";\n  }, [darkTheme]);\n\n  return (\n    <ThemeContext.Provider value={{ darkTheme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AACpD,SAASC,YAAY,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAwC,CAAC,KAAK;EAAAC,EAAA;EAC5E,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAU,KAAK,CAAC;EAE1D,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxBD,YAAY,CAAEE,IAAI,IAAK,CAACA,IAAI,CAAC;EAC/B,CAAC;EAED,MAAMC,YAAY,GAAGX,OAAO,CAAC,MAAMY,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC;EAErEd,SAAS,CAAC,MAAM;IACd,IAAI,CAACY,YAAY,EAAE;MACjB,IACEG,MAAM,CAACC,UAAU,IACjBD,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,EACzD;QACAR,YAAY,CAAC,IAAI,CAAC;MACpB;IACF,CAAC,MAAM;MACLA,YAAY,CAACG,YAAY,KAAK,MAAM,CAAC;IACvC;EACF,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElBZ,SAAS,CAAC,MAAM;IACda,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEV,SAAS,GAAG,MAAM,GAAG,OAAO,CAAC;IAC3DW,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGb,SAAS,GAAG,MAAM,GAAG,OAAO;EACxD,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,oBACEJ,OAAA,CAACF,YAAY,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEf,SAAS;MAAEE;IAAY,CAAE;IAAAJ,QAAA,EACtDA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACpB,EAAA,CAhCWF,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}