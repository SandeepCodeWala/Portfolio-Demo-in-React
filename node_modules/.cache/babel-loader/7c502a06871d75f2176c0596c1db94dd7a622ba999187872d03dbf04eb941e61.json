{"ast":null,"code":"import{useMemo,useState}from\"react\";export function useBoolean(){let initialState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;const[value,setValue]=useState(initialState);const callbacks=useMemo(()=>({on:()=>setValue(true),off:()=>setValue(false),toggle:()=>setValue(prev=>!prev)}),[]);return[value,callbacks];}","map":{"version":3,"names":["useMemo","useState","useBoolean","initialState","arguments","length","undefined","value","setValue","callbacks","on","off","toggle","prev"],"sources":["/Users/sandy/Desktop/Portfolio/react-frontend-dev-portfolio/src/hooks/useBoolean.tsx"],"sourcesContent":["import { useMemo, useState } from \"react\";\n\ntype InitialState = boolean | (() => boolean);\n\nexport function useBoolean(initialState: InitialState = false) {\n  const [value, setValue] = useState(initialState);\n  const callbacks = useMemo(\n    () => ({\n      on: () => setValue(true),\n      off: () => setValue(false),\n      toggle: () => setValue((prev) => !prev),\n    }),\n    [],\n  );\n  return [value, callbacks] as const;\n}\n"],"mappings":"AAAA,OAASA,OAAO,CAAEC,QAAQ,KAAQ,OAAO,CAIzC,MAAO,SAAS,CAAAC,UAAUA,CAAA,CAAqC,IAApC,CAAAC,YAA0B,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,KAAK,CAC3D,KAAM,CAACG,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAACE,YAAY,CAAC,CAChD,KAAM,CAAAM,SAAS,CAAGT,OAAO,CACvB,KAAO,CACLU,EAAE,CAAEA,CAAA,GAAMF,QAAQ,CAAC,IAAI,CAAC,CACxBG,GAAG,CAAEA,CAAA,GAAMH,QAAQ,CAAC,KAAK,CAAC,CAC1BI,MAAM,CAAEA,CAAA,GAAMJ,QAAQ,CAAEK,IAAI,EAAK,CAACA,IAAI,CACxC,CAAC,CAAC,CACF,EACF,CAAC,CACD,MAAO,CAACN,KAAK,CAAEE,SAAS,CAAC,CAC3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}